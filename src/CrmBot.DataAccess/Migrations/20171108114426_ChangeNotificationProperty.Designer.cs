// <auto-generated />
using CrmBot.DataAccess;
using CrmBot.DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CrmBot.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20171108114426_ChangeNotificationProperty")]
    partial class ChangeNotificationProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrmBot.DataAccess.Models.NotificationSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("CheckTime");

                    b.Property<int>("EventType");

                    b.Property<DateTime?>("LastCheck");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSubscriptions");
                });

            modelBuilder.Entity("CrmBot.DataAccess.Models.TelegramChat", b =>
                {
                    b.Property<long>("ChatId");

                    b.Property<string>("AccessToken");

                    b.Property<Guid>("SecureKey")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int?>("UserId");

                    b.HasKey("ChatId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("TelegramChats");
                });

            modelBuilder.Entity("CrmBot.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BranchId");

                    b.Property<int>("CrmUserId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("TimeZoneCode");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrmBot.DataAccess.Models.NotificationSubscription", b =>
                {
                    b.HasOne("CrmBot.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CrmBot.DataAccess.Models.TelegramChat", b =>
                {
                    b.HasOne("CrmBot.DataAccess.Models.User", "User")
                        .WithOne("Chat")
                        .HasForeignKey("CrmBot.DataAccess.Models.TelegramChat", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
